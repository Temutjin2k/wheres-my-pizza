version: '3.8'

networks:
  net:
    driver: bridge

volumes:
  rabbitmq_data:

services: 
  restaurant-system:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8082:8080" 
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - net


  postgresql:
    image: postgres:16.3
    hostname: postgresql
    ports:
      - 5432:5432
    networks:
      - net
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: restaurant_user
      POSTGRES_PASSWORD: restaurant_pass
      POSTGRES_DB: restaurant_db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U restaurant_user -d restaurant_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"   # AMQP (default RabbitMQ port)
      - "15672:15672" # Management UI
    networks:
      - net
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped